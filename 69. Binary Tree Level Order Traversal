class TreeNode {
  int val;
  TreeNode left, right;
  public TreeNode(int val) {
    this.val = val;
    this.left = null;
    this.right = null;
  }
}
  
public List<List<Integer>> levelOrderTraverse(TreeNode root) {
  List<List<Integer>> res = new ArrayList();
  if (root == null) {
    return res;
  }
  
  Queue<TreeNode> q = new LinkedList();
  q.offer(root);
  while (!q.isEmpty()) {
    int size = q.size();
    List<Integer> level = new ArrayList();
    while (size-- > 0) {
      TreeNode cur = q.poll();
      level.add(cur.val);
      if (cur.left != null) {
        q.offer(cur.left);
      }
      if (cur.right != null) {
        q.offer(cur.right);
      }
    }
    res.add(level);
  }
  return res;
 }
